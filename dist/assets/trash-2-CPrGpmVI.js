var E=i=>{throw TypeError(i)};var O=(i,t,s)=>t.has(i)||E("Cannot "+s);var e=(i,t,s)=>(O(i,t,"read from private field"),s?s.call(i):t.get(i)),p=(i,t,s)=>t.has(i)?E("Cannot add the same private member more than once"):t instanceof WeakSet?t.add(i):t.set(i,s),b=(i,t,s,r)=>(O(i,t,"write to private field"),r?r.call(i,s):t.set(i,s),s),y=(i,t,s)=>(O(i,t,"access private method"),s);import{m as P,s as T,n as S,o as L,p as K,e as U,r as m,t as j,v as q,c as R}from"./index-ILCPKANJ.js";var u,l,h,a,o,x,g,w,I=(w=class extends P{constructor(t,s){super();p(this,o);p(this,u);p(this,l);p(this,h);p(this,a);b(this,u,t),this.setOptions(s),this.bindMethods(),y(this,o,x).call(this)}bindMethods(){this.mutate=this.mutate.bind(this),this.reset=this.reset.bind(this)}setOptions(t){var r;const s=this.options;this.options=e(this,u).defaultMutationOptions(t),T(this.options,s)||e(this,u).getMutationCache().notify({type:"observerOptionsUpdated",mutation:e(this,h),observer:this}),s!=null&&s.mutationKey&&this.options.mutationKey&&S(s.mutationKey)!==S(this.options.mutationKey)?this.reset():((r=e(this,h))==null?void 0:r.state.status)==="pending"&&e(this,h).setOptions(this.options)}onUnsubscribe(){var t;this.hasListeners()||(t=e(this,h))==null||t.removeObserver(this)}onMutationUpdate(t){y(this,o,x).call(this),y(this,o,g).call(this,t)}getCurrentResult(){return e(this,l)}reset(){var t;(t=e(this,h))==null||t.removeObserver(this),b(this,h,void 0),y(this,o,x).call(this),y(this,o,g).call(this)}mutate(t,s){var r;return b(this,a,s),(r=e(this,h))==null||r.removeObserver(this),b(this,h,e(this,u).getMutationCache().build(e(this,u),this.options)),e(this,h).addObserver(this),e(this,h).execute(t)}},u=new WeakMap,l=new WeakMap,h=new WeakMap,a=new WeakMap,o=new WeakSet,x=function(){var s;const t=((s=e(this,h))==null?void 0:s.state)??L();b(this,l,{...t,isPending:t.status==="pending",isSuccess:t.status==="success",isError:t.status==="error",isIdle:t.status==="idle",mutate:this.mutate,reset:this.reset})},g=function(t){K.batch(()=>{var s,r,n,v,c,f,k,C;if(e(this,a)&&this.hasListeners()){const d=e(this,l).variables,M=e(this,l).context;(t==null?void 0:t.type)==="success"?((r=(s=e(this,a)).onSuccess)==null||r.call(s,t.data,d,M),(v=(n=e(this,a)).onSettled)==null||v.call(n,t.data,null,d,M)):(t==null?void 0:t.type)==="error"&&((f=(c=e(this,a)).onError)==null||f.call(c,t.error,d,M),(C=(k=e(this,a)).onSettled)==null||C.call(k,void 0,t.error,d,M))}this.listeners.forEach(d=>{d(e(this,l))})})},w);function D(i,t){const s=U(),[r]=m.useState(()=>new I(s,i));m.useEffect(()=>{r.setOptions(i)},[r,i]);const n=m.useSyncExternalStore(m.useCallback(c=>r.subscribe(K.batchCalls(c)),[r]),()=>r.getCurrentResult(),()=>r.getCurrentResult()),v=m.useCallback((c,f)=>{r.mutate(c,f).catch(j)},[r]);if(n.error&&q(r.options.throwOnError,[n.error]))throw n.error;return{...n,mutate:v,mutateAsync:n.mutate}}/**
 * @license lucide-react v0.344.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */const H=R("Plus",[["path",{d:"M5 12h14",key:"1ays0h"}],["path",{d:"M12 5v14",key:"s699le"}]]);/**
 * @license lucide-react v0.344.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */const Q=R("Trash2",[["path",{d:"M3 6h18",key:"d0wm0j"}],["path",{d:"M19 6v14c0 1-1 2-2 2H7c-1 0-2-1-2-2V6",key:"4alrt4"}],["path",{d:"M8 6V4c0-1 1-2 2-2h4c1 0 2 1 2 2v2",key:"v07s0e"}],["line",{x1:"10",x2:"10",y1:"11",y2:"17",key:"1uufr5"}],["line",{x1:"14",x2:"14",y1:"11",y2:"17",key:"xtxkd"}]]);export{H as P,Q as T,D as u};
